name: Keep MakanStreamlit Alive

on:
  schedule:
    - cron: '0 * * * *'  # Hourly base schedule
  workflow_dispatch:

jobs:
  wake-up:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Chrome and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install Selenium
        run: |
          python -m pip install selenium webdriver-manager

      - name: Generate random delay
        run: |
          MIN_DELAY=60  # 1 hour minimum
          MAX_DELAY=120 # 2 hours maximum
          RANDOM_DELAY=$(( MIN_DELAY + RANDOM % (MAX_DELAY - MIN_DELAY + 1) ))
          echo "RANDOM_DELAY_MIN=$RANDOM_DELAY" >> $GITHUB_ENV
          echo "‚è± Next check in $RANDOM_DELAY minutes"

      - name: Sleep random interval
        run: |
          sleep $(( $RANDOM_DELAY_MIN * 60 ))

      - name: Run randomized wake-up script
        run: |
          python - <<EOF
          from selenium import webdriver
          from selenium.webdriver.common.by import By
          from selenium.webdriver.support.ui import WebDriverWait
          from selenium.webdriver.support import expected_conditions as EC
          from webdriver_manager.chrome import ChromeDriverManager
          from selenium.webdriver.chrome.service import Service
          import time
          import random

          # Configuration
          APP_URL = "https://makans.streamlit.app"
          WAKE_BUTTON_XPATH = '//*[@id="root"]/div[1]/div/div/div/div/button'

          options = webdriver.ChromeOptions()
          options.add_argument("--headless")
          options.add_argument("--no-sandbox")
          options.add_argument("--disable-dev-shm-usage")
          options.binary_location = "/usr/bin/google-chrome-stable"

          service = Service(ChromeDriverManager().install())
          driver = webdriver.Chrome(service=service, options=options)

          try:
              # Random interaction sequence
              driver.get(f"{APP_URL}?r={random.randint(1,1000)}")
              
              # Check sleep state with random wait
              try:
                  WebDriverWait(driver, random.uniform(15, 25)).until(
                      EC.presence_of_element_located((By.XPATH, WAKE_BUTTON_XPATH))
                  ).click()
                  print("üîî Woke sleeping app")
                  time.sleep(random.uniform(10, 15))
              except:
                  print("üåû App already awake")

              # Random activity pattern
              activity = random.choice([
                  ("refresh", lambda: driver.refresh()),
                  ("scroll", lambda: driver.execute_script(f"window.scrollBy(0, {random.randint(200,800)})")),
                  ("keypress", lambda: driver.find_element(By.TAG_NAME, 'body').send_keys(webdriver.Keys.ESCAPE))
              ])
              activity[1]()
              print(f"üîÑ Performed {activity[0]} activity")

          except Exception as e:
              print(f"üö® Error: {str(e)}")
          finally:
              driver.quit()
          EOF

      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: makan-debug
          path: debug.png
