name: Keep Streamlit App Alive

on:
  schedule:
    - cron: '0 * * * *'  # Runs at the start of every hour
  workflow_dispatch:

jobs:
  wake-up:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Chrome and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install Selenium
        run: |
          python -m pip install selenium webdriver-manager

      - name: Run hourly wake-up script
        run: |
          python - <<EOF
          from selenium import webdriver
          from selenium.webdriver.common.by import By
          from selenium.webdriver.support.ui import WebDriverWait
          from selenium.webdriver.support import expected_conditions as EC
          from webdriver_manager.chrome import ChromeDriverManager
          from selenium.webdriver.chrome.service import Service
          import time

          options = webdriver.ChromeOptions()
          options.add_argument("--headless")
          options.add_argument("--no-sandbox")
          options.add_argument("--disable-dev-shm-usage")
          options.binary_location = "/usr/bin/google-chrome-stable"

          service = Service(ChromeDriverManager().install())
          driver = webdriver.Chrome(service=service, options=options)

          try:
              # First: Check for sleep state
              driver.get("https://makans.streamlit.app/")
              
              try:
                  button = WebDriverWait(driver, 15).until(
                      EC.element_to_be_clickable((By.XPATH, '//*[@id="root"]/div[1]/div/div/div/div/button'))
                  )
                  print("🔄 App asleep - waking up...")
                  button.click()
                  time.sleep(15)  # Wait for restart
              except:
                  print("✅ App already awake")

              # Second: Reset inactivity timer
              print("♻️ Simulating user activity...")
              driver.refresh()
              time.sleep(5)
              
              # Third: Additional activity (optional)
              driver.find_element(By.TAG_NAME, 'body').send_keys(webdriver.Keys.ESCAPE)
              print("🎯 Simulated keyboard interaction")

          except Exception as e:
              print(f"🚨 Error: {str(e)}")
          finally:
              driver.quit()
          EOF

      - name: Upload debug screenshot
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: selenium-debug
          path: debug.png
