name: Keep Streamlit App Alive

on:
  schedule:
    - cron: '*/10 * * * *'  # Every 10 minutes
  workflow_dispatch:

jobs:
  wake-up:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Playwright and dependencies
        run: |
          python -m pip install playwright
          playwright install chromium
          playwright install-deps chromium

      - name: Run wake-up script with improved handling
        run: |
          python - <<EOF
          from playwright.sync_api import sync_playwright
          import time

          with sync_playwright() as p:
              browser = p.chromium.launch()
              page = browser.new_page()
              
              # Add timeout configuration
              page.set_default_timeout(60000)  # 60 seconds timeout
              
              try:
                  # Navigate with longer wait
                  page.goto("https://makans.streamlit.app/", wait_until="domcontentloaded")
                  
                  # Wait specifically for either awake or sleep state
                  try:
                      # Check if sleep page appears within 20 seconds
                      page.wait_for_selector("text='This app has gone to sleep'", timeout=20000)
                      
                      # More reliable button selector
                      print("App is asleep. Clicking wake button...")
                      page.click("button:has-text('Yes, get this app back up?')")
                      
                      # Wait for confirmation of wake-up
                      page.wait_for_selector("text='App is running'", timeout=40000)
                      print("Successfully woke up the app!")
                      
                  except Exception as sleep_error:
                      # If no sleep page found, refresh to reset timer
                      print("App seems awake. Refreshing to prevent sleep...")
                      page.reload()
                      
              except Exception as main_error:
                  print(f"Error: {main_error}")
                  
              finally:
                  browser.close()
                  print("Browser closed.")
          EOF
